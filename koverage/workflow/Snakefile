import attrmap as ap
import attrmap.utils as au


### CONFIG
configfile: os.path.join(workflow.basedir, '../', 'config', 'config.yaml')
configfile: os.path.join(workflow.basedir, '../', 'config', 'system_config.yaml')
config = ap.AttrMap(config)
config.refkmers = os.path.join(dir.temp, os.path.basename(config.args.assembly) + "." + str(config.args.kmer_size) + "kmer")


include: os.path.join("rules", "preflight.smk")
include: os.path.join("rules", "coverage.smk")


# Mark target rules
target_rules = []
def targetRule(fn):
    assert fn.__name__.startswith('__')
    target_rules.append(fn.__name__[2:])
    return fn


@targetRule
rule all:
    input:
        targets.bams,
        targets.coverage,


@targetRule
rule kmer:
    input:
        targets.kmercov


@targetRule
rule print_targets:
    run:
        print("\nTop level rules are: \n", file=sys.stderr)
        print("* " + "\n* ".join(target_rules) + "\n\n", file=sys.stderr)
