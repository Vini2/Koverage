@Article{snakemake,
AUTHOR = { Mölder, F and Jablonski, KP and Letcher, B and Hall, MB and Tomkins-Tinch, CH and Sochat, V and Forster, J and Lee, S and Twardziok, SO and Kanitz, A and Wilm, A and Holtgrewe, M and Rahmann, S and Nahnsen, S and Köster, J},
TITLE = {Sustainable data analysis with Snakemake [version 1; peer review: 1 approved, 1 approved with reservations]
},
JOURNAL = {F1000Research},
VOLUME = {10},
YEAR = {2021},
NUMBER = {33},
DOI = {10.12688/f1000research.29032.1},
}
@article{snaketool,
    doi = {10.1371/journal.pcbi.1010705},
    author = {Roach, Michael J. AND Pierce-Ward, N. Tessa AND Suchecki, Radoslaw AND Mallawaarachchi, Vijini AND Papudeshi, Bhavya AND Handley, Scott A. AND Brown, C. Titus AND Watson-Haigh, Nathan S. AND Edwards, Robert A.},
    journal = {PLOS Computational Biology},
    publisher = {Public Library of Science},
    title = {Ten simple rules and a template for creating workflows-as-applications},
    year = {2022},
    month = {12},
    volume = {18},
    url = {https://doi.org/10.1371/journal.pcbi.1010705},
    pages = {1-9},
    abstract = {null},
    number = {12},
}
@article{minimap,
    author = {Li, Heng},
    title = "{Minimap2: pairwise alignment for nucleotide sequences}",
    journal = {Bioinformatics},
    volume = {34},
    number = {18},
    pages = {3094-3100},
    year = {2018},
    month = {05},
    abstract = {null},
    issn = {1367-4803},
    doi = {10.1093/bioinformatics/bty191},
    url = {https://doi.org/10.1093/bioinformatics/bty191},
    eprint = {https://academic.oup.com/bioinformatics/article-pdf/34/18/3094/48919122/bioinformatics\_34\_18\_3094.pdf},
}
@article{jellyfish,
    author = {Marçais, Guillaume and Kingsford, Carl},
    title = "{A fast, lock-free approach for efficient parallel counting of occurrences of k-mers}",
    journal = {Bioinformatics},
    volume = {27},
    number = {6},
    pages = {764-770},
    year = {2011},
    month = {01},
    abstract = "{Motivation: Counting the number of occurrences of every k-mer (substring of length k) in a long string is a central subproblem in many applications, including genome assembly, error correction of sequencing reads, fast multiple sequence alignment and repeat detection. Recently, the deep sequence coverage generated by next-generation sequencing technologies has caused the amount of sequence to be processed during a genome project to grow rapidly, and has rendered current k-mer counting tools too slow and memory intensive. At the same time, large multicore computers have become commonplace in research facilities allowing for a new parallel computational paradigm.Results: We propose a new k-mer counting algorithm and associated implementation, called Jellyfish, which is fast and memory efficient. It is based on a multithreaded, lock-free hash table optimized for counting k-mers up to 31 bases in length. Due to their flexibility, suffix arrays have been the data structure of choice for solving many string problems. For the task of k-mer counting, important in many biological applications, Jellyfish offers a much faster and more memory-efficient solution.Availability: The Jellyfish software is written in C++ and is GPL licensed. It is available for download at http://www.cbcb.umd.edu/software/jellyfish.Contact:  gmarcais@umd.eduSupplementary information:  Supplementary data are available at Bioinformatics online.}",
    issn = {1367-4803},
    doi = {10.1093/bioinformatics/btr011},
    url = {https://doi.org/10.1093/bioinformatics/btr011},
    eprint = {https://academic.oup.com/bioinformatics/article-pdf/27/6/764/48866141/bioinformatics\_27\_6\_764.pdf},
}


